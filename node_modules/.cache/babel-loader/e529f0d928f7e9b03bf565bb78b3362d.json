{"ast":null,"code":"var _jsxFileName = \"/home/daniel/programming/projects/initiative/src/containers/CharacterHolder.jsx\";\nimport React from 'react';\nimport Character from '../components/Character';\nexport default class CharacterHolder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTurnEnd = uuid => {\n      this.state.orderedChars.find(char => char.uuid === uuid).moved = true;\n      this.sortChars();\n    };\n\n    this.sortChars = () => {\n      let orderedChars = this.props.props.sort((a, b) => {\n        const aModifier = a.moved ? 0 : -99;\n        const bModifier = b.moved ? 0 : -99;\n        return a.initiative - aModifier - (b.initiative - bModifier) || a.dex - aModifier - (b.dex - bModifier);\n      }).map((char, i) => /*#__PURE__*/React.createElement(Character, Object.assign({}, char, {\n        key: i,\n        onTurnEnd: uuid => this.onTurnEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 135\n        }\n      })));\n      this.setState({\n        orderedChars: orderedChars\n      });\n    };\n\n    this.state = {\n      orderedChars: []\n    };\n  }\n\n  componentDidMount() {\n    this.sortChars();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, this.state.orderedChars));\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/programming/projects/initiative/src/containers/CharacterHolder.jsx"],"names":["React","Character","CharacterHolder","Component","constructor","props","onTurnEnd","uuid","state","orderedChars","find","char","moved","sortChars","sort","a","b","aModifier","bModifier","initiative","dex","map","i","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,eAAe,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,SATkB,GASLC,IAAD,IAAU;AACpB,WAAKC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,CAA6BC,IAAI,IAAIA,IAAI,CAACJ,IAAL,KAAcA,IAAnD,EAAyDK,KAAzD,GAAiE,IAAjE;AACA,WAAKC,SAAL;AACD,KAZiB;;AAAA,SAclBA,SAdkB,GAcN,MAAM;AAChB,UAAIJ,YAAY,GAAG,KAAKJ,KAAL,CAAWA,KAAX,CAAiBS,IAAjB,CAAsB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAChD,cAAMC,SAAS,GAAGF,CAAC,CAACH,KAAF,GAAU,CAAV,GAAc,CAAC,EAAjC;AACA,cAAMM,SAAS,GAAGF,CAAC,CAACJ,KAAF,GAAU,CAAV,GAAc,CAAC,EAAjC;AACA,eAAQG,CAAC,CAACI,UAAF,GAAeF,SAAhB,IAA8BD,CAAC,CAACG,UAAF,GAAeD,SAA7C,KAA4DH,CAAC,CAACK,GAAF,GAAQH,SAAT,IAAuBD,CAAC,CAACI,GAAF,GAAQF,SAA/B,CAAlE;AAA6G,OAH5F,EAG8FG,GAH9F,CAGkG,CAACV,IAAD,EAAOW,CAAP,kBAAa,oBAAC,SAAD,oBAAeX,IAAf;AAAqB,QAAA,GAAG,EAAEW,CAA1B;AAA6B,QAAA,SAAS,EAAGf,IAAD,IAAU,KAAKD,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAH/G,CAAnB;AAIA,WAAKiB,QAAL,CAAc;AAACd,QAAAA,YAAY,EAAEA;AAAf,OAAd;AACD,KApBiB;;AAEhB,SAAKD,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAE;AAAf,KAAb;AACD;;AAEDe,EAAAA,iBAAiB,GAAE;AACjB,SAAKX,SAAL;AACD;;AAeDY,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,KAAKjB,KAAL,CAAWC,YADP,CAAP,CADF;AAKD;;AA7ByD","sourcesContent":["import React from 'react'\nimport Character from '../components/Character'\n\nexport default class CharacterHolder extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {orderedChars: []}\n  }\n\n  componentDidMount(){\n    this.sortChars()\n  }\n\n  onTurnEnd = (uuid) => {\n    this.state.orderedChars.find(char => char.uuid === uuid).moved = true;\n    this.sortChars()\n  }\n\n  sortChars = () => {\n    let orderedChars = this.props.props.sort((a,b) => {\n      const aModifier = a.moved ? 0 : -99;\n      const bModifier = b.moved ? 0 : -99;\n      return (a.initiative - aModifier) - (b.initiative - bModifier) || (a.dex - aModifier) - (b.dex - bModifier) }).map((char, i) => <Character {...char} key={i} onTurnEnd={(uuid) => this.onTurnEnd}/>)\n    this.setState({orderedChars: orderedChars})\n  }\n\n  render(){\n    return(\n      <table><tbody>\n        {this.state.orderedChars}\n      </tbody></table>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}